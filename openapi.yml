openapi: 3.1.0
info:
  title: Winston AI MCP Server
  description: Model Context Protocol (MCP) Server for Winston AI - the most accurate AI Detector. Detect AI-generated content, plagiarism, and compare texts with ease.
  version: 1.0.0
  contact:
    name: Winston AI Support
    url: https://gowinston.ai
    email: support@gowinston.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-logo:
    url: https://cdn.gowinston.ai/wp-content/uploads/2023/01/winston-ai-logo.svg
    altText: Winston AI Logo

servers:
  - url: https://api.gowinston.ai
    description: Production server

security:
  - BearerAuth: []

paths:
  /v2/ai-content-detection:
    post:
      summary: Detect AI-generated text
      description: |
        Analyzes text to determine the likelihood that it was generated by AI versus written by a human.
        Provides confidence scores and identifies the most AI-like sentences.
      operationId: detectAiText
      tags:
        - AI Detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  maxLength: 150000
                  minLength: 300
                  description: |
                    The text to analyze for AI content detection.
                    Minimum 300 characters recommended for reliable results.
                    Maximum 150,000 characters per request.
                  example: "This is a sample text that will be analyzed to determine if it was written by a human or generated by an AI system. The analysis will provide confidence scores and identify specific sentences that appear to be AI-generated."
                file:
                  type: string
                  description: |
                    The file to analyze for AI content detection.
                    The file must be in plain .pdf, .doc or .docx format.
                    The file has priority over the text, so if you give a text and a file, it's the file that will be scanned.
                  example: "https://example.com/file.pdf"
                website:
                  type: string
                  description: |
                    The website to analyze for AI content detection.
                    The website must be publicly accessible.
                    The website has priority over the text and the file, so if you give a text, a file and a website, it's the website that will be scanned.
                  example: "https://example.com"
      responses:
        '200':
          description: Successful AI text detection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiTextDetectionResponse'
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/ai-image-detection:
    post:
      summary: Detect AI-generated images
      description: |
        Analyzes images to determine if they were generated by AI.
        Uses advanced machine learning models and metadata analysis.
      operationId: detectAiImage
      tags:
        - AI Detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: |
                    Publicly accessible URL of the image to analyze.
                    Supported formats: JPG, JPEG, PNG, WEBP
                    Minimum resolution: 256x256 pixels
                  example: "https://example.com/image.jpg"
      responses:
        '200':
          description: Successful AI image detection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiImageDetectionResponse'
        '400':
          description: Bad request - invalid image URL or format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/plagiarism:
    post:
      summary: Detect plagiarism in text
      description: |
        Scans text against billions of web pages to detect potential plagiarism.
        Provides detailed reports with source identification and similarity scores.
      operationId: detectPlagiarism
      tags:
        - Plagiarism Detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  maxLength: 120000
                  minLength: 100
                  description: |
                    The text to check for plagiarism.
                    Minimum 100 characters, maximum 120,000 characters.
                  example: "This is a sample text that will be checked for plagiarism against billions of web pages."
                language:
                  type: string
                  pattern: '^[a-z]{2}$'
                  default: "en"
                  description: |
                    Two-letter language code for the text.
                    Defaults to "en" for English.
                  example: "en"
                country:
                  type: string
                  pattern: '^[a-z]{2}$'
                  default: "us"
                  description: |
                    Two-letter country code where the text was written.
                    Defaults to "us" for United States.
                  example: "us"
      responses:
        '200':
          description: Successful plagiarism detection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlagiarismDetectionResponse'
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/text-compare:
    post:
      summary: Compare two texts for similarity
      description: |
        Compares two texts and provides detailed similarity analysis.
        Returns similarity scores and matching content breakdown.
      operationId: compareTexts
      tags:
        - Text Comparison
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - first_text
                - second_text
              properties:
                first_text:
                  type: string
                  maxLength: 120000
                  description: |
                    The first text to compare.
                    Maximum 120,000 characters.
                  example: "This is the first text that will be compared."
                second_text:
                  type: string
                  maxLength: 120000
                  description: |
                    The second text to compare against the first.
                    Maximum 120,000 characters.
                  example: "This is the second text that will be compared with the first."
      responses:
        '200':
          description: Successful text comparison
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextCompareResponse'
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
      description: |
        Your Winston AI API key. Get one at https://dev.gowinston.ai

  schemas:
    AiTextDetectionResponse:
      type: object
      properties:
        score:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: |
            Percentage indicating how likely the text was written by a human.
            Higher scores indicate more human-like content.
          example: 85.5
        sentences:
          type: array
          description: Array of sentences with their individual AI scores
          items:
            type: object
            properties:
              score:
                type: number
                format: float
                minimum: 0
                maximum: 100
                description: AI score for this specific sentence
                example: 92.3
              text:
                type: string
                description: The sentence text
                example: "This sentence appears to be AI-generated."
        language:
          type: string
          description: Detected language of the text
          example: "en"
        version:
          type: string
          description: API version used
          example: "2.0"
        credits_used:
          type: integer
          description: Number of credits consumed
          example: 1
        credits_remaining:
          type: integer
          description: Number of credits remaining in your account
          example: 999

    AiImageDetectionResponse:
      type: object
      properties:
        score:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Overall AI generation score
          example: 75.2
        human_probability:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Probability that the image was created by a human
          example: 0.248
        ai_probability:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Probability that the image was generated by AI
          example: 0.752
        version:
          type: string
          description: API version used
          example: "2.0"
        mime_type:
          type: string
          description: MIME type of the analyzed image
          example: "image/jpeg"
        c2pa:
          type: object
          nullable: true
          description: C2PA metadata if available
        exif:
          type: object
          nullable: true
          description: EXIF metadata if available
        ai_watermark_detected:
          type: boolean
          description: Whether AI watermarks were detected
          example: true
        ai_watermark_issuers:
          type: array
          items:
            type: string
          description: List of detected AI watermark issuers
          example: ["Midjourney", "DALL-E"]
        credits_used:
          type: integer
          description: Number of credits consumed
          example: 1
        credits_remaining:
          type: integer
          description: Number of credits remaining in your account
          example: 999

    PlagiarismDetectionResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
          example: 200
        scanInformation:
          type: object
          properties:
            service:
              type: string
              description: Service name
              example: "Winston AI Plagiarism"
            scanTime:
              type: string
              format: date-time
              description: When the scan was performed
              example: "2024-01-15T10:30:00Z"
            inputType:
              type: string
              description: Type of input analyzed
              example: "text"
        result:
          type: object
          properties:
            score:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Overall plagiarism percentage
              example: 15.5
            sourceCounts:
              type: integer
              description: Number of sources found
              example: 3
            textWordCounts:
              type: integer
              description: Total words in the analyzed text
              example: 250
            totalPlagiarismWords:
              type: integer
              description: Number of words that appear to be plagiarized
              example: 45
            identicalWordCounts:
              type: integer
              description: Number of identical word matches
              example: 30
            similarWordCounts:
              type: integer
              description: Number of similar word matches
              example: 15
        sources:
          type: array
          items:
            type: object
            properties:
              score:
                type: number
                format: float
                minimum: 0
                maximum: 100
                description: Plagiarism score for this source
                example: 25.5
              canAccess:
                type: boolean
                description: Whether the source is accessible
                example: true
              totalNumberOfWords:
                type: integer
                description: Total words in the source
                example: 1000
              plagiarismWords:
                type: integer
                description: Number of plagiarized words from this source
                example: 45
              identicalWordCounts:
                type: integer
                description: Number of identical words
                example: 30
              similarWordCounts:
                type: integer
                description: Number of similar words
                example: 15
              url:
                type: string
                format: uri
                description: URL of the source
                example: "https://example.com/article"
              author:
                type: string
                description: Author of the source
                example: "John Doe"
              description:
                type: string
                description: Description of the source
                example: "An article about AI detection"
              title:
                type: string
                description: Title of the source
                example: "AI Detection Methods"
              publishedDate:
                type: string
                format: date
                description: Publication date
                example: "2024-01-10"
              source:
                type: string
                description: Source type
                example: "web"
              citation:
                type: boolean
                description: Whether this should be cited
                example: true
              plagiarismFound:
                type: array
                items:
                  type: object
                  properties:
                    startIndex:
                      type: integer
                      description: Start index of plagiarized text
                      example: 10
                    endIndex:
                      type: integer
                      description: End index of plagiarized text
                      example: 25
                    sequence:
                      type: string
                      description: The plagiarized text sequence
                      example: "This is plagiarized content"
              is_excluded:
                type: boolean
                description: Whether this source is excluded from results
                example: false
              similarWords:
                type: array
                items:
                  type: string
                description: List of similar words found
                example: ["similar", "words", "found"]
        indexes:
          type: array
          items:
            type: object
            properties:
              startIndex:
                type: integer
                description: Start index of matched text
                example: 10
              endIndex:
                type: integer
                description: End index of matched text
                example: 25
        citations:
          type: array
          items:
            type: string
          description: Suggested citations
          example: ["Doe, J. (2024). AI Detection Methods. Retrieved from https://example.com/article"]
        credits_used:
          type: integer
          description: Number of credits consumed
          example: 1
        credits_remaining:
          type: integer
          description: Number of credits remaining in your account
          example: 999

    TextCompareResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
          example: 200
        similarity_score:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Overall similarity percentage between the two texts
          example: 75.5
        first_text:
          type: object
          properties:
            total_word_count:
              type: integer
              description: Total words in the first text
              example: 100
            matching_word_count:
              type: integer
              description: Number of matching words
              example: 75
            similarity_percentage:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Similarity percentage for the first text
              example: 75.0
            items:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of match
                    example: "identical"
                  word_count:
                    type: integer
                    description: Number of words in this match
                    example: 10
                  index_start:
                    type: integer
                    description: Starting index of the match
                    example: 0
                  length:
                    type: integer
                    description: Length of the match
                    example: 50
        second_text:
          type: object
          properties:
            total_word_count:
              type: integer
              description: Total words in the second text
              example: 120
            matching_word_count:
              type: integer
              description: Number of matching words
              example: 75
            similarity_percentage:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Similarity percentage for the second text
              example: 62.5
            items:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of match
                    example: "identical"
                  word_count:
                    type: integer
                    description: Number of words in this match
                    example: 10
                  index_start:
                    type: integer
                    description: Starting index of the match
                    example: 0
                  length:
                    type: integer
                    description: Length of the match
                    example: 50
        credits_used:
          type: integer
          description: Number of credits consumed
          example: 1
        credits_remaining:
          type: integer
          description: Number of credits remaining in your account
          example: 999

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid API key"
        description:
          type: string
          description: Detailed error description
          example: "The provided API key is invalid or has expired"

tags:
  - name: AI Detection
    description: Tools for detecting AI-generated content
  - name: Plagiarism Detection
    description: Tools for detecting plagiarism in text
  - name: Text Comparison
    description: Tools for comparing text similarity

externalDocs:
  description: Winston AI Developer Documentation
  url: https://docs.gowinston.ai/api-reference/introduction